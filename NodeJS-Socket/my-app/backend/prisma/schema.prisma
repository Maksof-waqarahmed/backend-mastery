// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?  @unique
  password  String?
  number    String?  @unique
  isAdmin   Boolean? @default(false)
  isActive  Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  messagesSent     Message[]     @relation("SentMessages")
  messagesReceived Message[]     @relation("ReceivedMessages")
  groupMemberships GroupMember[]
  Group            Group[]

  @@map("users")
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String   @db.ObjectId
  receiverId String?  @db.ObjectId // for 1-1 chat
  groupId    String?  @db.ObjectId // for group chat
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sender   User   @relation("SentMessages", fields: [senderId], references: [id])
  receiver User?  @relation("ReceivedMessages", fields: [receiverId], references: [id])
  group    Group? @relation(fields: [groupId], references: [id])

  @@map("messages")
}

model Group {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  createdBy   String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator  User          @relation(fields: [createdBy], references: [id])
  members  GroupMember[]
  messages Message[]

  @@map("groups")
}

model GroupMember {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  groupId  String   @db.ObjectId
  joinedAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
  @@map("group_members")
}
